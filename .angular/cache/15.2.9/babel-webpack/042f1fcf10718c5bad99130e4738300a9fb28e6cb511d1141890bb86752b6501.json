{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectionMessageSentEvent = exports.ConnectionMessageReceivedEvent = exports.ConnectionEstablishErrorEvent = exports.ConnectionErrorEvent = exports.ConnectionClosedEvent = exports.ConnectionEstablishedEvent = exports.ConnectionStartEvent = exports.ConnectionEvent = exports.ServiceEvent = void 0;\nconst PlatformEvent_js_1 = require(\"./PlatformEvent.js\");\nclass ServiceEvent extends PlatformEvent_js_1.PlatformEvent {\n  constructor(eventName, jsonstring, eventType = PlatformEvent_js_1.EventType.Info) {\n    super(eventName, eventType);\n    this.privJsonResult = jsonstring;\n  }\n  get jsonString() {\n    return this.privJsonResult;\n  }\n}\nexports.ServiceEvent = ServiceEvent;\nclass ConnectionEvent extends PlatformEvent_js_1.PlatformEvent {\n  constructor(eventName, connectionId, eventType = PlatformEvent_js_1.EventType.Info) {\n    super(eventName, eventType);\n    this.privConnectionId = connectionId;\n  }\n  get connectionId() {\n    return this.privConnectionId;\n  }\n}\nexports.ConnectionEvent = ConnectionEvent;\nclass ConnectionStartEvent extends ConnectionEvent {\n  constructor(connectionId, uri, headers) {\n    super(\"ConnectionStartEvent\", connectionId);\n    this.privUri = uri;\n    this.privHeaders = headers;\n  }\n  get uri() {\n    return this.privUri;\n  }\n  get headers() {\n    return this.privHeaders;\n  }\n}\nexports.ConnectionStartEvent = ConnectionStartEvent;\nclass ConnectionEstablishedEvent extends ConnectionEvent {\n  constructor(connectionId) {\n    super(\"ConnectionEstablishedEvent\", connectionId);\n  }\n}\nexports.ConnectionEstablishedEvent = ConnectionEstablishedEvent;\nclass ConnectionClosedEvent extends ConnectionEvent {\n  constructor(connectionId, statusCode, reason) {\n    super(\"ConnectionClosedEvent\", connectionId, PlatformEvent_js_1.EventType.Debug);\n    this.privReason = reason;\n    this.privStatusCode = statusCode;\n  }\n  get reason() {\n    return this.privReason;\n  }\n  get statusCode() {\n    return this.privStatusCode;\n  }\n}\nexports.ConnectionClosedEvent = ConnectionClosedEvent;\nclass ConnectionErrorEvent extends ConnectionEvent {\n  constructor(connectionId, message, type) {\n    super(\"ConnectionErrorEvent\", connectionId, PlatformEvent_js_1.EventType.Debug);\n    this.privMessage = message;\n    this.privType = type;\n  }\n  get message() {\n    return this.privMessage;\n  }\n  get type() {\n    return this.privType;\n  }\n}\nexports.ConnectionErrorEvent = ConnectionErrorEvent;\nclass ConnectionEstablishErrorEvent extends ConnectionEvent {\n  constructor(connectionId, statuscode, reason) {\n    super(\"ConnectionEstablishErrorEvent\", connectionId, PlatformEvent_js_1.EventType.Error);\n    this.privStatusCode = statuscode;\n    this.privReason = reason;\n  }\n  get reason() {\n    return this.privReason;\n  }\n  get statusCode() {\n    return this.privStatusCode;\n  }\n}\nexports.ConnectionEstablishErrorEvent = ConnectionEstablishErrorEvent;\nclass ConnectionMessageReceivedEvent extends ConnectionEvent {\n  constructor(connectionId, networkReceivedTimeISO, message) {\n    super(\"ConnectionMessageReceivedEvent\", connectionId);\n    this.privNetworkReceivedTime = networkReceivedTimeISO;\n    this.privMessage = message;\n  }\n  get networkReceivedTime() {\n    return this.privNetworkReceivedTime;\n  }\n  get message() {\n    return this.privMessage;\n  }\n}\nexports.ConnectionMessageReceivedEvent = ConnectionMessageReceivedEvent;\nclass ConnectionMessageSentEvent extends ConnectionEvent {\n  constructor(connectionId, networkSentTimeISO, message) {\n    super(\"ConnectionMessageSentEvent\", connectionId);\n    this.privNetworkSentTime = networkSentTimeISO;\n    this.privMessage = message;\n  }\n  get networkSentTime() {\n    return this.privNetworkSentTime;\n  }\n  get message() {\n    return this.privMessage;\n  }\n}\nexports.ConnectionMessageSentEvent = ConnectionMessageSentEvent;\n\n//# sourceMappingURL=ConnectionEvents.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}