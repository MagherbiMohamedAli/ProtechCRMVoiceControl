{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RawWebsocketMessage = void 0;\nconst ConnectionMessage_js_1 = require(\"./ConnectionMessage.js\");\nconst Error_js_1 = require(\"./Error.js\");\nconst Guid_js_1 = require(\"./Guid.js\");\nclass RawWebsocketMessage {\n  constructor(messageType, payload, id) {\n    this.privPayload = null;\n    if (!payload) {\n      throw new Error_js_1.ArgumentNullError(\"payload\");\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (messageType === ConnectionMessage_js_1.MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\n      throw new Error_js_1.InvalidOperationError(\"Payload must be ArrayBuffer\");\n    }\n    if (messageType === ConnectionMessage_js_1.MessageType.Text && !(typeof payload === \"string\")) {\n      throw new Error_js_1.InvalidOperationError(\"Payload must be a string\");\n    }\n    this.privMessageType = messageType;\n    this.privPayload = payload;\n    this.privId = id ? id : Guid_js_1.createNoDashGuid();\n  }\n  get messageType() {\n    return this.privMessageType;\n  }\n  get payload() {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return this.privPayload;\n  }\n  get textContent() {\n    if (this.privMessageType === ConnectionMessage_js_1.MessageType.Binary) {\n      throw new Error_js_1.InvalidOperationError(\"Not supported for binary message\");\n    }\n    return this.privPayload;\n  }\n  get binaryContent() {\n    if (this.privMessageType === ConnectionMessage_js_1.MessageType.Text) {\n      throw new Error_js_1.InvalidOperationError(\"Not supported for text message\");\n    }\n    return this.privPayload;\n  }\n  get id() {\n    return this.privId;\n  }\n}\nexports.RawWebsocketMessage = RawWebsocketMessage;\n\n//# sourceMappingURL=RawWebsocketMessage.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}