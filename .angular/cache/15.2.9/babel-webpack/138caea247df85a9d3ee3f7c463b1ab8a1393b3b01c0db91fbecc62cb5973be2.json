{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebsocketConnection = void 0;\nconst Exports_js_1 = require(\"../common/Exports.js\");\nconst WebsocketMessageAdapter_js_1 = require(\"./WebsocketMessageAdapter.js\");\nclass WebsocketConnection {\n  constructor(uri, queryParameters, headers, messageFormatter, proxyInfo, enableCompression = false, connectionId) {\n    this.privIsDisposed = false;\n    if (!uri) {\n      throw new Exports_js_1.ArgumentNullError(\"uri\");\n    }\n    if (!messageFormatter) {\n      throw new Exports_js_1.ArgumentNullError(\"messageFormatter\");\n    }\n    this.privMessageFormatter = messageFormatter;\n    let queryParams = \"\";\n    let i = 0;\n    if (queryParameters) {\n      for (const paramName in queryParameters) {\n        if (paramName) {\n          queryParams += i === 0 && uri.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n          const key = encodeURIComponent(paramName);\n          queryParams += key;\n          let val = queryParameters[paramName];\n          if (val) {\n            val = encodeURIComponent(val);\n            queryParams += `=${val}`;\n          }\n          i++;\n        }\n      }\n    }\n    if (headers) {\n      for (const headerName in headers) {\n        if (headerName) {\n          queryParams += i === 0 && uri.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n          const val = encodeURIComponent(headers[headerName]);\n          queryParams += `${headerName}=${val}`;\n          i++;\n        }\n      }\n    }\n    this.privUri = uri + queryParams;\n    this.privId = connectionId ? connectionId : Exports_js_1.createNoDashGuid();\n    this.privConnectionMessageAdapter = new WebsocketMessageAdapter_js_1.WebsocketMessageAdapter(this.privUri, this.id, this.privMessageFormatter, proxyInfo, headers, enableCompression);\n  }\n  dispose() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.privIsDisposed = true;\n      if (this.privConnectionMessageAdapter) {\n        yield this.privConnectionMessageAdapter.close();\n      }\n    });\n  }\n  isDisposed() {\n    return this.privIsDisposed;\n  }\n  get id() {\n    return this.privId;\n  }\n  get uri() {\n    return this.privUri;\n  }\n  state() {\n    return this.privConnectionMessageAdapter.state;\n  }\n  open() {\n    return this.privConnectionMessageAdapter.open();\n  }\n  send(message) {\n    return this.privConnectionMessageAdapter.send(message);\n  }\n  read() {\n    return this.privConnectionMessageAdapter.read();\n  }\n  get events() {\n    return this.privConnectionMessageAdapter.events;\n  }\n}\nexports.WebsocketConnection = WebsocketConnection;\n\n//# sourceMappingURL=WebsocketConnection.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}