{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeakerIdentificationModel = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines SpeakerIdentificationModel class for Speaker Recognition\n * Model contains a set of profiles against which to identify speaker(s)\n * @class SpeakerIdentificationModel\n */\nclass SpeakerIdentificationModel {\n  constructor(profiles) {\n    this.privVoiceProfiles = [];\n    this.privProfileIds = [];\n    Contracts_js_1.Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\n    if (profiles.length === 0) {\n      throw new Error(\"Empty Voice Profiles array\");\n    }\n    for (const profile of profiles) {\n      if (profile.profileType !== Exports_js_1.VoiceProfileType.TextIndependentIdentification) {\n        throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\n      }\n      this.privVoiceProfiles.push(profile);\n      this.privProfileIds.push(profile.profileId);\n    }\n  }\n  static fromProfiles(profiles) {\n    return new SpeakerIdentificationModel(profiles);\n  }\n  get voiceProfileIds() {\n    return this.privProfileIds.join(\",\");\n  }\n  get profileIds() {\n    return this.privProfileIds;\n  }\n  get scenario() {\n    return \"TextIndependentIdentification\";\n  }\n}\nexports.SpeakerIdentificationModel = SpeakerIdentificationModel;\n\n//# sourceMappingURL=SpeakerIdentificationModel.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}