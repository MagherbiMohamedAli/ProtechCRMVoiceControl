{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EnumTranslation = void 0;\nconst Exports_js_1 = require(\"../sdk/Exports.js\");\nconst Exports_js_2 = require(\"./Exports.js\");\nclass EnumTranslation {\n  static implTranslateRecognitionResult(recognitionStatus, expectEndOfDictation = false) {\n    let reason = Exports_js_1.ResultReason.Canceled;\n    switch (recognitionStatus) {\n      case Exports_js_2.RecognitionStatus.Success:\n        reason = Exports_js_1.ResultReason.RecognizedSpeech;\n        break;\n      case Exports_js_2.RecognitionStatus.EndOfDictation:\n        // If we need the result in EndOfDictation (typically some session level result),\n        // translate into RecognizedSpeech, otherwise NoMatch\n        reason = expectEndOfDictation ? Exports_js_1.ResultReason.RecognizedSpeech : Exports_js_1.ResultReason.NoMatch;\n        break;\n      case Exports_js_2.RecognitionStatus.NoMatch:\n      case Exports_js_2.RecognitionStatus.InitialSilenceTimeout:\n      case Exports_js_2.RecognitionStatus.BabbleTimeout:\n        reason = Exports_js_1.ResultReason.NoMatch;\n        break;\n      case Exports_js_2.RecognitionStatus.Error:\n      case Exports_js_2.RecognitionStatus.BadRequest:\n      case Exports_js_2.RecognitionStatus.Forbidden:\n      default:\n        reason = Exports_js_1.ResultReason.Canceled;\n        break;\n    }\n    return reason;\n  }\n  static implTranslateCancelResult(recognitionStatus) {\n    let reason = Exports_js_1.CancellationReason.EndOfStream;\n    switch (recognitionStatus) {\n      case Exports_js_2.RecognitionStatus.Success:\n      case Exports_js_2.RecognitionStatus.EndOfDictation:\n      case Exports_js_2.RecognitionStatus.NoMatch:\n        reason = Exports_js_1.CancellationReason.EndOfStream;\n        break;\n      case Exports_js_2.RecognitionStatus.InitialSilenceTimeout:\n      case Exports_js_2.RecognitionStatus.BabbleTimeout:\n      case Exports_js_2.RecognitionStatus.Error:\n      case Exports_js_2.RecognitionStatus.BadRequest:\n      case Exports_js_2.RecognitionStatus.Forbidden:\n      default:\n        reason = Exports_js_1.CancellationReason.Error;\n        break;\n    }\n    return reason;\n  }\n  static implTranslateCancelErrorCode(recognitionStatus) {\n    let reason = Exports_js_1.CancellationErrorCode.NoError;\n    switch (recognitionStatus) {\n      case Exports_js_2.RecognitionStatus.Error:\n        reason = Exports_js_1.CancellationErrorCode.ServiceError;\n        break;\n      case Exports_js_2.RecognitionStatus.TooManyRequests:\n        reason = Exports_js_1.CancellationErrorCode.TooManyRequests;\n        break;\n      case Exports_js_2.RecognitionStatus.BadRequest:\n        reason = Exports_js_1.CancellationErrorCode.BadRequestParameters;\n        break;\n      case Exports_js_2.RecognitionStatus.Forbidden:\n        reason = Exports_js_1.CancellationErrorCode.Forbidden;\n        break;\n      default:\n        reason = Exports_js_1.CancellationErrorCode.NoError;\n        break;\n    }\n    return reason;\n  }\n  static implTranslateErrorDetails(cancellationErrorCode) {\n    let errorDetails = \"The speech service encountered an internal error and could not continue.\";\n    switch (cancellationErrorCode) {\n      case Exports_js_1.CancellationErrorCode.Forbidden:\n        errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\n        break;\n      case Exports_js_1.CancellationErrorCode.BadRequestParameters:\n        errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\n        break;\n      case Exports_js_1.CancellationErrorCode.TooManyRequests:\n        errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\n        break;\n      default:\n        break;\n    }\n    return errorDetails;\n  }\n}\nexports.EnumTranslation = EnumTranslation;\n\n//# sourceMappingURL=EnumTranslation.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}