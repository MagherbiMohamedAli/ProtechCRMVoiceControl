{"ast":null,"code":"\"use strict\";\n\n//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Diagnostics = void 0;\nconst Exports_js_1 = require(\"../common.browser/Exports.js\");\nconst Exports_js_2 = require(\"../common/Exports.js\");\n/**\n * Defines diagnostics API for managing console output\n * Added in version 1.21.0\n */\nclass Diagnostics {\n  static SetLoggingLevel(logLevel) {\n    this.privListener = new Exports_js_1.ConsoleLoggingListener(logLevel);\n    Exports_js_2.Events.instance.attachConsoleListener(this.privListener);\n  }\n  static StartConsoleOutput() {\n    if (!!this.privListener) {\n      this.privListener.enableConsoleOutput = true;\n    }\n  }\n  static StopConsoleOutput() {\n    if (!!this.privListener) {\n      this.privListener.enableConsoleOutput = false;\n    }\n  }\n  static SetLogOutputPath(path) {\n    if (typeof window === \"undefined\") {\n      if (!!this.privListener) {\n        this.privListener.logPath = path;\n      }\n    } else {\n      throw new Error(\"File system logging not available in browser.\");\n    }\n  }\n}\nexports.Diagnostics = Diagnostics;\nDiagnostics.privListener = undefined;\n\n//# sourceMappingURL=Diagnostics.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}