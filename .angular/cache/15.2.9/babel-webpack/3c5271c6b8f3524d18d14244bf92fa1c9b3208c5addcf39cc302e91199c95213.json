{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventSource = void 0;\nconst Error_js_1 = require(\"./Error.js\");\nconst Guid_js_1 = require(\"./Guid.js\");\nclass EventSource {\n  constructor(metadata) {\n    this.privEventListeners = {};\n    this.privIsDisposed = false;\n    this.privConsoleListener = undefined;\n    this.privMetadata = metadata;\n  }\n  onEvent(event) {\n    if (this.isDisposed()) {\n      throw new Error_js_1.ObjectDisposedError(\"EventSource\");\n    }\n    if (this.metadata) {\n      for (const paramName in this.metadata) {\n        if (paramName) {\n          if (event.metadata) {\n            if (!event.metadata[paramName]) {\n              event.metadata[paramName] = this.metadata[paramName];\n            }\n          }\n        }\n      }\n    }\n    for (const eventId in this.privEventListeners) {\n      if (eventId && this.privEventListeners[eventId]) {\n        this.privEventListeners[eventId](event);\n      }\n    }\n  }\n  attach(onEventCallback) {\n    const id = Guid_js_1.createNoDashGuid();\n    this.privEventListeners[id] = onEventCallback;\n    return {\n      detach: () => {\n        delete this.privEventListeners[id];\n        return Promise.resolve();\n      }\n    };\n  }\n  attachListener(listener) {\n    return this.attach(e => listener.onEvent(e));\n  }\n  attachConsoleListener(listener) {\n    if (!!this.privConsoleListener) {\n      void this.privConsoleListener.detach(); // Detach implementation for eventListeners is synchronous\n    }\n\n    this.privConsoleListener = this.attach(e => listener.onEvent(e));\n    return this.privConsoleListener;\n  }\n  isDisposed() {\n    return this.privIsDisposed;\n  }\n  dispose() {\n    this.privEventListeners = null;\n    this.privIsDisposed = true;\n  }\n  get metadata() {\n    return this.privMetadata;\n  }\n}\nexports.EventSource = EventSource;\n\n//# sourceMappingURL=EventSource.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}