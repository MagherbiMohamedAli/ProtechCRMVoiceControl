{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DynamicGrammarBuilder = void 0;\n/**\n * Responsible for building the object to be sent to the speech service to support dynamic grammars.\n * @class DynamicGrammarBuilder\n */\nclass DynamicGrammarBuilder {\n  // Adds one more reference phrases to the dynamic grammar to send.\n  // All added phrases are generic phrases.\n  addPhrase(phrase) {\n    if (!this.privPhrases) {\n      this.privPhrases = [];\n    }\n    if (phrase instanceof Array) {\n      this.privPhrases = this.privPhrases.concat(phrase);\n    } else {\n      this.privPhrases.push(phrase);\n    }\n  }\n  // Clears all phrases stored in the current object.\n  clearPhrases() {\n    this.privPhrases = undefined;\n  }\n  // Adds one or more reference grammars to the current grammar.\n  addReferenceGrammar(grammar) {\n    if (!this.privGrammars) {\n      this.privGrammars = [];\n    }\n    if (grammar instanceof Array) {\n      this.privGrammars = this.privGrammars.concat(grammar);\n    } else {\n      this.privGrammars.push(grammar);\n    }\n  }\n  // clears all grammars stored on the recognizer.\n  clearGrammars() {\n    this.privGrammars = undefined;\n  }\n  // Generates an object that represents the dynamic grammar used by the Speech Service.\n  // This is done by building an object with the correct layout based on the phrases and reference grammars added to this instance\n  // of a DynamicGrammarBuilder\n  generateGrammarObject() {\n    if (this.privGrammars === undefined && this.privPhrases === undefined) {\n      return undefined;\n    }\n    const retObj = {};\n    retObj.ReferenceGrammars = this.privGrammars;\n    if (undefined !== this.privPhrases && 0 !== this.privPhrases.length) {\n      const retPhrases = [];\n      this.privPhrases.forEach(value => {\n        retPhrases.push({\n          Text: value\n        });\n      });\n      retObj.Groups = [{\n        Type: \"Generic\",\n        Items: retPhrases\n      }];\n    }\n    return retObj;\n  }\n}\nexports.DynamicGrammarBuilder = DynamicGrammarBuilder;\n\n//# sourceMappingURL=DynamicGrammarBuilder.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}