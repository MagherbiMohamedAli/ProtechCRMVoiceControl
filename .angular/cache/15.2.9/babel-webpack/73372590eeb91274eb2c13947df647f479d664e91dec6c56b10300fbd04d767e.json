{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PronunciationAssessmentConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Pronunciation assessment configuration.\n * @class PronunciationAssessmentConfig\n * Added in version 1.15.0.\n */\nclass PronunciationAssessmentConfig {\n  /**\n   * PronunciationAssessmentConfig constructor.\n   * @constructor\n   * @param {string} referenceText\n   * @param gradingSystem\n   * @param granularity\n   * @param enableMiscue\n   */\n  constructor(referenceText, gradingSystem = Exports_js_1.PronunciationAssessmentGradingSystem.FivePoint, granularity = Exports_js_1.PronunciationAssessmentGranularity.Phoneme, enableMiscue = false) {\n    Contracts_js_1.Contracts.throwIfNullOrUndefined(referenceText, \"referenceText\");\n    this.privProperties = new Exports_js_1.PropertyCollection();\n    this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n    this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_GradingSystem, Exports_js_1.PronunciationAssessmentGradingSystem[gradingSystem]);\n    this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Granularity, Exports_js_1.PronunciationAssessmentGranularity[granularity]);\n    this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, String(enableMiscue));\n  }\n  /**\n   * @member PronunciationAssessmentConfig.fromJSON\n   * @function\n   * @public\n   * @param {string} json The json string containing the pronunciation assessment parameters.\n   * @return {PronunciationAssessmentConfig} Instance of PronunciationAssessmentConfig\n   * @summary Creates an instance of the PronunciationAssessmentConfig from json.\n   * This method is designed to support the pronunciation assessment parameters still in preview.\n   * Under normal circumstances, use the constructor instead.\n   */\n  static fromJSON(json) {\n    Contracts_js_1.Contracts.throwIfNullOrUndefined(json, \"json\");\n    const config = new PronunciationAssessmentConfig(\"\");\n    config.privProperties = new Exports_js_1.PropertyCollection();\n    config.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Json, json);\n    return config;\n  }\n  toJSON() {\n    this.updateJson();\n    return this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params);\n  }\n  applyTo(recognizer) {\n    this.updateJson();\n    const recoBase = recognizer.internalData;\n    recoBase.expectContentAssessmentResponse = !!this.privContentAssessmentTopic;\n    recoBase.speechContext.setPronunciationAssessmentParams(this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params), this.privContentAssessmentTopic, recoBase.isSpeakerDiarizationEnabled);\n  }\n  /**\n   * Gets the reference text.\n   * @member PronunciationAssessmentConfig.prototype.referenceText\n   * @function\n   * @public\n   * @returns {string} Reference text.\n   */\n  get referenceText() {\n    return this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText);\n  }\n  /**\n   * Gets/Sets the reference text.\n   * @member PronunciationAssessmentConfig.prototype.referenceText\n   * @function\n   * @public\n   * @param {string} referenceText - Reference text.\n   */\n  set referenceText(referenceText) {\n    Contracts_js_1.Contracts.throwIfNullOrWhitespace(referenceText, \"referenceText\");\n    this.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText, referenceText);\n  }\n  /**\n   * Sets the phoneme alphabet.\n   * The valid values are \"SAPI\" (default) and \"IPA\".\n   * Added in version 1.20.0\n   * @member PronunciationAssessmentConfig.prototype.phonemeAlphabet\n   * @function\n   * @public\n   * @param {string} phonemeAlphabet - Phoneme alphabet.\n   */\n  set phonemeAlphabet(phonemeAlphabet) {\n    Contracts_js_1.Contracts.throwIfNullOrWhitespace(phonemeAlphabet, \"phonemeAlphabet\");\n    this.privPhonemeAlphabet = phonemeAlphabet;\n  }\n  /**\n   * Sets the boolean enableMiscue property.\n   * Added in version 1.26.0\n   * @member PronunciationAssessmentConfig.prototype.enableMiscue\n   * @function\n   * @public\n   * @param {boolean} enableMiscue - enable miscue.\n   */\n  set enableMiscue(enableMiscue) {\n    const enableMiscueString = enableMiscue ? \"true\" : \"false\";\n    this.properties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, enableMiscueString);\n  }\n  /**\n   * Gets the boolean enableMiscue property.\n   * Added in version 1.26.0\n   * @member PronunciationAssessmentConfig.prototype.enableMiscue\n   * @function\n   * @public\n   * @return {boolean} enableMiscue - enable miscue.\n   */\n  get enableMiscue() {\n    const enableMiscueString = this.properties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue, \"false\");\n    return enableMiscueString.toLowerCase() === \"true\";\n  }\n  /**\n   * Sets the nbest phoneme count\n   * Added in version 1.20.0\n   * @member PronunciationAssessmentConfig.prototype.nbestPhonemeCount\n   * @function\n   * @public\n   * @param {number} nbestPhonemeCount - NBest phoneme count.\n   */\n  set nbestPhonemeCount(nbestPhonemeCount) {\n    this.privNBestPhonemeCount = nbestPhonemeCount;\n  }\n  /**\n   * Enables the prosody assessment.\n   * Added in version 1.34.0\n   * @member PronunciationAssessmentConfig.prototype.enableProsodyAssessment\n   * @function\n   * @public\n   * @param {boolean} enableProsodyAssessment - enable prosody assessment.\n   */\n  set enableProsodyAssessment(enableProsodyAssessment) {\n    this.privEnableProsodyAssessment = enableProsodyAssessment;\n  }\n  /**\n   * Enables content assessment and sets the topic.\n   * Added in version 1.34.0\n   * @member PronunciationAssessmentConfig.prototype.enableContentAssessmentWithTopic\n   * @function\n   * @public\n   * @param {string} topic - Topic for content assessment.\n   */\n  enableContentAssessmentWithTopic(topic) {\n    this.privContentAssessmentTopic = topic;\n  }\n  /**\n   * @member PronunciationAssessmentConfig.prototype.properties\n   * @function\n   * @public\n   * @return {PropertyCollection} Properties of the config.\n   * @summary Gets a pronunciation assessment config properties\n   */\n  get properties() {\n    return this.privProperties;\n  }\n  updateJson() {\n    const jsonString = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Json, \"{}\");\n    const paramsJson = JSON.parse(jsonString);\n    const referenceText = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_ReferenceText);\n    if (referenceText) {\n      paramsJson.referenceText = referenceText;\n    }\n    const gradingSystem = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_GradingSystem);\n    if (gradingSystem) {\n      paramsJson.gradingSystem = gradingSystem;\n    }\n    const granularity = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_Granularity);\n    if (granularity) {\n      paramsJson.granularity = granularity;\n    }\n    if (this.privPhonemeAlphabet) {\n      paramsJson.phonemeAlphabet = this.privPhonemeAlphabet;\n    }\n    if (this.privNBestPhonemeCount) {\n      paramsJson.nbestPhonemeCount = this.privNBestPhonemeCount;\n    }\n    paramsJson.enableProsodyAssessment = this.privEnableProsodyAssessment;\n    // always set dimension to Comprehensive\n    paramsJson.dimension = \"Comprehensive\";\n    const enableMiscueString = this.privProperties.getProperty(Exports_js_1.PropertyId.PronunciationAssessment_EnableMiscue);\n    if (enableMiscueString) {\n      paramsJson.enableMiscue = this.enableMiscue;\n    }\n    this.privProperties.setProperty(Exports_js_1.PropertyId.PronunciationAssessment_Params, JSON.stringify(paramsJson));\n  }\n}\nexports.PronunciationAssessmentConfig = PronunciationAssessmentConfig;\n\n//# sourceMappingURL=PronunciationAssessmentConfig.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}