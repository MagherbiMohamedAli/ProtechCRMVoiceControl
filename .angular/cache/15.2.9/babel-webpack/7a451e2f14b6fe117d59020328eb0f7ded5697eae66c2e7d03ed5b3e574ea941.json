{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConversationReceivedTranslationEventArgs = exports.ParticipantsListEventArgs = exports.ParticipantAttributeEventArgs = exports.ParticipantEventArgs = exports.LockRoomEventArgs = exports.MuteAllEventArgs = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nconst Exports_js_1 = require(\"../../sdk/Exports.js\");\nclass MuteAllEventArgs extends Exports_js_1.SessionEventArgs {\n  constructor(isMuted, sessionId) {\n    super(sessionId);\n    this.privIsMuted = isMuted;\n  }\n  get isMuted() {\n    return this.privIsMuted;\n  }\n}\nexports.MuteAllEventArgs = MuteAllEventArgs;\nclass LockRoomEventArgs extends Exports_js_1.SessionEventArgs {\n  constructor(isLocked, sessionId) {\n    super(sessionId);\n    this.privIsLocked = isLocked;\n  }\n  get isMuted() {\n    return this.privIsLocked;\n  }\n}\nexports.LockRoomEventArgs = LockRoomEventArgs;\nclass ParticipantEventArgs extends Exports_js_1.SessionEventArgs {\n  constructor(participant, sessionId) {\n    super(sessionId);\n    this.privParticipant = participant;\n  }\n  get participant() {\n    return this.privParticipant;\n  }\n}\nexports.ParticipantEventArgs = ParticipantEventArgs;\nclass ParticipantAttributeEventArgs extends Exports_js_1.SessionEventArgs {\n  constructor(participantId, key, value, sessionId) {\n    super(sessionId);\n    this.privKey = key;\n    this.privValue = value;\n    this.privParticipantId = participantId;\n  }\n  get value() {\n    return this.privValue;\n  }\n  get key() {\n    return this.privKey;\n  }\n  get id() {\n    return this.privParticipantId;\n  }\n}\nexports.ParticipantAttributeEventArgs = ParticipantAttributeEventArgs;\nclass ParticipantsListEventArgs extends Exports_js_1.SessionEventArgs {\n  constructor(conversationId, token, translateTo, profanityFilter, roomProfanityFilter, isRoomLocked, isMuteAll, participants, sessionId) {\n    super(sessionId);\n    this.privRoomId = conversationId;\n    this.privSessionToken = token;\n    this.privTranslateTo = translateTo;\n    this.privProfanityFilter = profanityFilter;\n    this.privRoomProfanityFilter = roomProfanityFilter;\n    this.privIsRoomLocked = isRoomLocked;\n    this.privIsRoomLocked = isMuteAll;\n    this.privParticipants = participants;\n  }\n  get sessionToken() {\n    return this.privSessionToken;\n  }\n  get conversationId() {\n    return this.privRoomId;\n  }\n  get translateTo() {\n    return this.privTranslateTo;\n  }\n  get profanityFilter() {\n    return this.privProfanityFilter;\n  }\n  get roomProfanityFilter() {\n    return this.privRoomProfanityFilter;\n  }\n  get isRoomLocked() {\n    return this.privIsRoomLocked;\n  }\n  get isMuteAll() {\n    return this.privIsMuteAll;\n  }\n  get participants() {\n    return this.privParticipants;\n  }\n}\nexports.ParticipantsListEventArgs = ParticipantsListEventArgs;\nclass ConversationReceivedTranslationEventArgs {\n  constructor(command, payload, sessionId) {\n    this.privPayload = payload;\n    this.privCommand = command;\n    this.privSessionId = sessionId;\n  }\n  get payload() {\n    return this.privPayload;\n  }\n  get command() {\n    return this.privCommand;\n  }\n  get sessionId() {\n    return this.privSessionId;\n  }\n}\nexports.ConversationReceivedTranslationEventArgs = ConversationReceivedTranslationEventArgs;\n\n//# sourceMappingURL=ConversationTranslatorEventArgs.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}