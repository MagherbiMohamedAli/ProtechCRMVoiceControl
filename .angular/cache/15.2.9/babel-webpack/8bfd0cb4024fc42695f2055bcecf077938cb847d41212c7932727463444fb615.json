{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AvatarEventArgs = exports.AvatarEventTypes = void 0;\nvar AvatarEventTypes;\n(function (AvatarEventTypes) {\n  AvatarEventTypes[\"SwitchedToSpeaking\"] = \"SwitchedToSpeaking\";\n  AvatarEventTypes[\"SwitchedToIdle\"] = \"SwitchedToIdle\";\n  AvatarEventTypes[\"SessionClosed\"] = \"SessionClosed\";\n})(AvatarEventTypes = exports.AvatarEventTypes || (exports.AvatarEventTypes = {}));\n/**\n * Defines content for talking avatar events.\n * @class AvatarEventArgs\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarEventArgs {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {number} audioOffset - The audio offset.\n   * @param {string} description - The description of the event.\n   */\n  constructor(audioOffset, description) {\n    this.privOffset = audioOffset;\n    this.privDescription = description;\n  }\n  /**\n   * The type of the event.\n   * @public\n   * @returns {AvatarEventTypes} The type of the event.\n   */\n  get type() {\n    return this.privType;\n  }\n  /**\n   * The time offset associated with this event.\n   * @public\n   * @returns {number} The time offset associated with this event.\n   */\n  get offset() {\n    return this.privOffset;\n  }\n  /**\n   * The description of the event.\n   * @public\n   * @returns {string} The description of the event.\n   */\n  get description() {\n    return this.privDescription;\n  }\n}\nexports.AvatarEventArgs = AvatarEventArgs;\n\n//# sourceMappingURL=AvatarEventArgs.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}