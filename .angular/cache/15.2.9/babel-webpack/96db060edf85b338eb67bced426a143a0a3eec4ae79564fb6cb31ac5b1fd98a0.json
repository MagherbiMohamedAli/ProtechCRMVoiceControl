{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/fire/compat/auth\";\nimport * as i4 from \"./users.service\";\nimport * as i5 from \"./local-storage\";\nimport * as i6 from \"@angular/router\";\nconst URL = \"http://localhost:8080/api/Auth\";\nexport let AuthentificationService = /*#__PURE__*/(() => {\n  var _class;\n  class AuthentificationService {\n    constructor(http, fb, afAuth, fireauth, userService, localSt, route) {\n      this.http = http;\n      this.fb = fb;\n      this.afAuth = afAuth;\n      this.fireauth = fireauth;\n      this.userService = userService;\n      this.localSt = localSt;\n      this.route = route;\n      this.userRolesSubject = new BehaviorSubject([]);\n      if (this.localSt.isLoggedIn()) {\n        this.loadUserRoles();\n      }\n    }\n    ngOnInit() {\n      this.credentialForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]]\n      });\n    }\n    loadUserRoles() {\n      this.userService.getUserById(this.localSt.getUserId()).subscribe({\n        next: data => {\n          const roles = data.roles.map(r => r.role);\n          this.userRolesSubject.next(roles);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n    getUserRoles() {\n      console.log(this.userRolesSubject.value);\n      return this.userRolesSubject.asObservable();\n    }\n    forgotpwd(passwordResetEmail) {\n      return this.afAuth.sendPasswordResetEmail(passwordResetEmail).then(() => {\n        window.alert('Email de réinitialisation est envoyé, vérifier votre boite de réception!');\n      }).catch(error => {\n        window.alert(error);\n      });\n    }\n    get email() {\n      return this.credentialForm.get('email');\n    }\n    inscriptionclient(user) {\n      return this.http.post(URL + \"/signup\", user);\n    }\n    loginclient(loginReq) {\n      return this.http.post(URL + \"/Connexion\", loginReq);\n    }\n  }\n  _class = AuthentificationService;\n  _class.ɵfac = function AuthentificationService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.FormBuilder), i0.ɵɵinject(i3.AngularFireAuth), i0.ɵɵinject(i3.AngularFireAuth), i0.ɵɵinject(i4.UsersService), i0.ɵɵinject(i5.LocalStorage), i0.ɵɵinject(i6.Router));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthentificationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}