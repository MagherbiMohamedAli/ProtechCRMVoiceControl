{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AvatarConfig = void 0;\nconst Contracts_js_1 = require(\"./Contracts.js\");\nconst Exports_js_1 = require(\"./Exports.js\");\n/**\n * Defines the talking avatar configuration.\n * @class AvatarConfig\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nclass AvatarConfig {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {string} character - The avatar character.\n   * @param {string} style - The avatar style.\n   * @param {AvatarVideoFormat} videoFormat - The talking avatar output video format.\n   */\n  constructor(character, style, videoFormat) {\n    this.privCustomized = false;\n    Contracts_js_1.Contracts.throwIfNullOrWhitespace(character, \"character\");\n    this.character = character;\n    this.style = style;\n    if (videoFormat === undefined) {\n      videoFormat = new Exports_js_1.AvatarVideoFormat();\n    }\n    this.videoFormat = videoFormat;\n  }\n  /**\n   * Indicates if the talking avatar is customized.\n   */\n  get customized() {\n    return this.privCustomized;\n  }\n  /**\n   * Sets if the talking avatar is customized.\n   */\n  set customized(value) {\n    this.privCustomized = value;\n  }\n  /**\n   * Sets the background color.\n   */\n  get backgroundColor() {\n    return this.privBackgroundColor;\n  }\n  /**\n   * Gets the background color.\n   */\n  set backgroundColor(value) {\n    this.privBackgroundColor = value;\n  }\n}\nexports.AvatarConfig = AvatarConfig;\n\n//# sourceMappingURL=AvatarConfig.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}