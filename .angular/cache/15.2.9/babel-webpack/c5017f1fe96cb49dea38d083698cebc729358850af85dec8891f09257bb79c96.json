{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst USER_ID_KEY = 'AuthUserId';\nconst AUTHORITIES_KEY = 'AuthAuthorities';\nconst USER_KEY = 'AuthUser';\nconst TOKEN_KEY = 'AuthToken';\nconst USERNAME_KEY = 'AuthUsername';\nexport let LocalStorage = /*#__PURE__*/(() => {\n  var _class;\n  class LocalStorage {\n    constructor(route) {\n      this.route = route;\n      this.roles = [];\n    }\n    Signout() {\n      localStorage.clear();\n      this.route.navigate(['']);\n    }\n    getToken() {\n      return localStorage.getItem(TOKEN_KEY);\n    }\n    saveToken(token) {\n      window.localStorage.removeItem(TOKEN_KEY);\n      window.localStorage.setItem(TOKEN_KEY, token);\n    }\n    getUsername() {\n      return localStorage.getItem(USERNAME_KEY);\n    }\n    saveUsername(username) {\n      window.localStorage.removeItem(USERNAME_KEY);\n      window.localStorage.setItem(USERNAME_KEY, username);\n    }\n    getUserId() {\n      return Number(localStorage.getItem(USER_ID_KEY));\n    }\n    saveUserId(userId) {\n      window.localStorage.removeItem(USER_ID_KEY);\n      window.localStorage.setItem(USER_ID_KEY, userId.toString());\n    }\n    getUser() {\n      return JSON.parse(localStorage.getItem(USER_KEY));\n    }\n    saveUser(user) {\n      window.localStorage.removeItem(USER_KEY);\n      window.localStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n    getAuthorities() {\n      return JSON.parse(localStorage.getItem(AUTHORITIES_KEY));\n    }\n    saveAuthorities(authorities) {\n      window.localStorage.removeItem(AUTHORITIES_KEY);\n      window.localStorage.setItem(AUTHORITIES_KEY, JSON.stringify(authorities));\n    }\n    isLoggedIn() {\n      return !!this.getToken();\n    }\n    isTokenExpired() {\n      const token = this.getToken();\n      if (token !== undefined) {\n        const decoded = jwt_decode(token);\n        if (decoded.exp === undefined) {\n          console.log('decoded.exp undefined');\n          return false;\n        }\n        const date = new Date(0);\n        const tokenExpDate = date.setUTCSeconds(decoded.exp);\n        if (tokenExpDate.valueOf() > new Date().valueOf()) {\n          return true;\n        } else {\n          window.localStorage.clear();\n          console.log('localStorage clear');\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n  _class = LocalStorage;\n  _class.ɵfac = function LocalStorage_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.Router));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return LocalStorage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}