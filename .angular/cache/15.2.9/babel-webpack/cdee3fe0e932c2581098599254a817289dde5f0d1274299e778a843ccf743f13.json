{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeechSynthesisWordBoundaryEventArgs = void 0;\n/**\n * Defines contents of speech synthesis word boundary event.\n * @class SpeechSynthesisWordBoundaryEventArgs\n * Added in version 1.11.0\n */\nclass SpeechSynthesisWordBoundaryEventArgs {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {number} audioOffset - The audio offset.\n   * @param {number} duration - The audio duration.\n   * @param {string} text - The text.\n   * @param {number} wordLength - The length of the word.\n   * @param {number} textOffset - The text offset.\n   * @param {SpeechSynthesisBoundaryType} boundaryType - The boundary type\n   */\n  constructor(audioOffset, duration, text, wordLength, textOffset, boundaryType) {\n    this.privAudioOffset = audioOffset;\n    this.privDuration = duration;\n    this.privText = text;\n    this.privWordLength = wordLength;\n    this.privTextOffset = textOffset;\n    this.privBoundaryType = boundaryType;\n  }\n  /**\n   * Specifies the audio offset.\n   * @member SpeechSynthesisWordBoundaryEventArgs.prototype.audioOffset\n   * @function\n   * @public\n   * @returns {number} the audio offset.\n   */\n  get audioOffset() {\n    return this.privAudioOffset;\n  }\n  /**\n   * Specifies the duration, in ticks (100 nanoseconds).\n   * @member SpeechSynthesisWordBoundaryEventArgs.prototype.duration\n   * @function\n   * @public\n   * @returns {number} Duration in 100 nanosecond increments.\n   */\n  get duration() {\n    return this.privDuration;\n  }\n  /**\n   * Specifies the text of the word boundary event.\n   * @member SpeechSynthesisWordBoundaryEventArgs.prototype.text\n   * @function\n   * @public\n   * @returns {string} the text.\n   */\n  get text() {\n    return this.privText;\n  }\n  /**\n   * Specifies the word length\n   * @member SpeechSynthesisWordBoundaryEventArgs.prototype.wordLength\n   * @function\n   * @public\n   * @returns {number} the word length\n   */\n  get wordLength() {\n    return this.privWordLength;\n  }\n  /**\n   * Specifies the text offset.\n   * @member SpeechSynthesisWordBoundaryEventArgs.prototype.textOffset\n   * @function\n   * @public\n   * @returns {number} the text offset.\n   */\n  get textOffset() {\n    return this.privTextOffset;\n  }\n  /**\n   * Specifies the boundary type.\n   * @member SpeechSynthesisWordBoundaryEventArgs.prototype.boundaryType\n   * @function\n   * @public\n   * @returns {SpeechSynthesisBoundaryType} the boundary type.\n   */\n  get boundaryType() {\n    return this.privBoundaryType;\n  }\n}\nexports.SpeechSynthesisWordBoundaryEventArgs = SpeechSynthesisWordBoundaryEventArgs;\n\n//# sourceMappingURL=SpeechSynthesisWordBoundaryEventArgs.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}